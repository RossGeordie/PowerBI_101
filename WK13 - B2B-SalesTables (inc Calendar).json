{"name":"B2B-SalesTables (inc Calendar)","description":"Sales Tables used for Main Reports","version":"1.0","culture":"en-GB","modifiedTime":"2025-04-21T09:14:55.2998231+00:00","ppdf:outputFileFormat":"Csv","pbi:mashup":{"fastCombine":false,"allowNativeQueries":false,"queriesMetadata":{"Base Query":{"queryId":"a2e0ee03-e35b-4610-86c3-bb15658a8c0a","queryName":"Base Query"},"Products":{"queryId":"e8dbdadd-c9b0-4fa0-9913-0fd1c83bda01","queryName":"Products","loadEnabled":true},"tAddresses - MAKE CHANGES HERE":{"queryId":"ce99241f-39a9-4910-b18a-9cefd7cb5b34","queryName":"tAddresses - MAKE CHANGES HERE"},"Orders":{"queryId":"a98bfb2b-d96e-42b6-82a3-6438c77859f1","queryName":"Orders","loadEnabled":true},"Sales":{"queryId":"f70602cd-45b1-4000-9921-56b27597d278","queryName":"Sales","loadEnabled":true},"Calendar":{"queryId":"526af355-8c93-4e51-a15a-3bc4083ab98f","queryName":"Calendar","loadEnabled":true},"Shipping Mode":{"queryId":"53a1c229-e503-4b3a-8856-286f39e1975e","queryName":"Shipping Mode","loadEnabled":true},"tCustomers":{"queryId":"5f32a9d6-f625-423e-8809-de6486dfc756","queryName":"tCustomers"},"Customers":{"queryId":"e3297fae-825b-4a70-8223-ac53d4d17783","queryName":"Customers","loadEnabled":true},"CustomerAddressLINK":{"queryId":"5d7664a2-5f37-43a3-a11d-a401311b5f29","queryName":"CustomerAddressLINK","loadEnabled":true},"Addresses":{"queryId":"dc8b7df5-bfe3-4f4c-87df-28ab3292c930","queryName":"Addresses","loadEnabled":true}},"document":"section Section1;\r\nshared #\"Base Query\" = let\n    Source = Csv.Document(Web.Contents(\"https://github.com/RossGeordie/PowerBI_101/raw/refs/heads/main/Sample-Superstore.csv\"),[Delimiter=\",\", Columns=21, Encoding=65001, QuoteStyle=QuoteStyle.None]),\n    #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Row ID\", Int64.Type}, {\"Order ID\", type text}, {\"Order Date\", type date}, {\"Ship Date\", type date}, {\"Ship Mode\", type text}, {\"Customer ID\", type text}, {\"Customer Name\", type text}, {\"Segment\", type text}, {\"Country\", type text}, {\"City\", type text}, {\"State\", type text}, {\"Postal Code\", Int64.Type}, {\"Region\", type text}, {\"Product ID\", type text}, {\"Category\", type text}, {\"Sub-Category\", type text}, {\"Product Name\", type text}, {\"Sales\", type number}, {\"Quantity\", Int64.Type}, {\"Discount\", type number}, {\"Profit\", type number}})\nin\n    #\"Changed Type\";\r\nshared Products = let\n    Source = #\"Base Query\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Product ID\", \"Category\", \"Sub-Category\", \"Product Name\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\", {\"Product ID\"})\nin\n    #\"Removed Duplicates\";\r\n[Description = \"Full list of addresses, hidden to make Dataflow work with Pro Subscriptions\"]\r\nshared #\"tAddresses - MAKE CHANGES HERE\" = let\n    Source = #\"Base Query\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Country\", \"City\", \"State\", \"Postal Code\", \"Region\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Added Index\" = Table.AddIndexColumn(#\"Removed Duplicates\", \"AddressID\", 1, 1, Int64.Type)\nin\n    #\"Added Index\";\r\nshared Orders = let\n    Source = #\"Base Query\",\n    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"Row ID\"}),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Columns\",{\"Order ID\", \"Order Date\", \"Sales\", \"Quantity\", \"Discount\", \"Profit\"}),\n    #\"Grouped Rows\" = Table.Group(#\"Removed Other Columns\", {\"Order ID\", \"Order Date\"}, {{\"OrderSalesAMT\", each List.Sum([Sales]), type nullable number}, {\"OrderQuant\", each List.Sum([Quantity]), type nullable number}, {\"OrderProfit\", each List.Sum([Profit]), type nullable number}, {\"Rows\", each Table.RowCount(_), Int64.Type}})\nin\n    #\"Grouped Rows\";\r\nshared Sales = let\n    Source = #\"Base Query\",\n    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"Row ID\"}),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Columns\",{\"Order ID\", \"Ship Date\", \"Ship Mode\", \"Customer ID\", \"Product ID\", \"Sales\", \"Quantity\", \"Discount\", \"Profit\"})\nin\n    #\"Removed Other Columns\";\r\nshared Calendar = let\n    // ONLY EDIT THESE VALUES\n    StartDate = #date(2000, 1, 1),  // Update the date you want your calendar table to start here the format is yyyy, mm, dd\n    EndDateYearOffset = 1, //Set Offset to 0 to use the HardEndDate below \n    HardEndDate = #date(2024, 12, 31),  // Update the date you want your calendar table to start here the format is yyyy, mm, dd\n    CorpMonthStart = 8,             // Month number for corporate Calendar\n    SoW = 0,                        // First Day of Week - 0 - 6 0 = Sunday, 1 = Monday, 2 =  Tuesday...\n    // END OF CONFIGURATION\n    EndDate = if EndDateYearOffset <> 0 then #date(Date.Year(DateTime.Date(DateTime.LocalNow()))+EndDateYearOffset, 12, 31) else HardEndDate,\n    CurrentDate = DateTime.Date(DateTime.LocalNow()),\n    CorpMonthEnd = CorpMonthStart - 1,\n    CorpDiff = 12 - CorpMonthStart + 1,\n    DayCount = Duration.Days(EndDate - StartDate) + 1,\n    Calendar = List.Dates(StartDate, DayCount, #duration(1, 0, 0, 0)),\n    Table = Table.FromList(Calendar, Splitter.SplitByNothing(), {\"Date\"}),\n    AddYear = Table.AddColumn(Table, \"Year\", each Date.Year([Date])),\n    AddMonth = Table.AddColumn(AddYear, \"Month\", each Date.Month([Date])),\n    AddDay = Table.AddColumn(AddMonth, \"Day\", each Date.Day([Date])),\n    AddMonthName = Table.AddColumn(AddDay, \"Month Name\", each Date.ToText([Date], \"MMMM\")),\n    AddDayName = Table.AddColumn(AddMonthName, \"Day Name\", each Date.ToText([Date], \"dddd\")),\n    AddFormattedDate = Table.AddColumn(AddDayName, \"Formatted Date\", each Date.ToText([Date], \"dd-MMM-yyyy\")),\n    AddMonthYear = Table.AddColumn(AddFormattedDate, \"MonthYear\", each Date.ToText([Date], \"MMM-yyyy\")),\n    AddMonthOffset = Table.AddColumn(AddMonthYear, \"Month Offset\", each (Date.Year([Date]) - Date.Year(CurrentDate)) * 12 + Date.Month([Date]) - Date.Month(CurrentDate), Int64.Type),\n    AddDayOffset = Table.AddColumn(AddMonthOffset, \"Day Offset\", each Date.From([Date]) - Date.From(CurrentDate), Int64.Type),\n    AddYearOffset = Table.AddColumn(AddDayOffset, \"YearOffset\", each Date.Year([Date])- Date.Year(CurrentDate), Int64.Type),\n    AddDayofWeek = Table.AddColumn(AddYearOffset, \"DoW\", each Date.DayOfWeek([Date]), Int64.Type),\n    AddCorporateMonth = Table.AddColumn(AddDayofWeek, \"CorpMonthnum\", each if Date.Month([Date]) >= CorpMonthStart then Date.Month([Date]) - CorpMonthEnd else Date.Month([Date]) + CorpDiff, Int64.Type),\n    AddWeekNumber = Table.AddColumn(AddCorporateMonth, \"Week Number\", each Date.WeekOfYear(Date.AddDays([Date], 7 - Date.DayOfWeek([Date], SoW))), Int64.Type),\n    #\"Added Custom\" = Table.AddColumn(AddWeekNumber, \"CorpYear\", each if [Month] > CorpMonthEnd then \"FY-\" & Text.From([Year]) else \"FY-\" & Text.From([Year]-1)),\n    AddWeekOffset = Table.AddColumn(#\"Added Custom\", \"Week Offset\", each Number.RoundDown(Duration.Days(Date.StartOfWeek([Date], SoW) - Date.StartOfWeek(CurrentDate, SoW)) / 7), Int64.Type),\n    #\"Changed Type\" = Table.TransformColumnTypes(AddWeekOffset,{{\"Date\", type date}, {\"Year\", type text}, {\"Month\", Int64.Type}, {\"Day\", Int64.Type}, {\"Month Name\", type text}, {\"Day Name\", type text}, {\"Formatted Date\", type text}, {\"MonthYear\", type text}, {\"Day Offset\", Int64.Type}, {\"CorpYear\", type text}})\nin\n    #\"Changed Type\";\r\nshared #\"Shipping Mode\" = let\n    Source = #\"Base Query\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Ship Mode\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Removed Duplicates\", \"ModeOrder\", each if [Ship Mode] = \"First Class\" then 1 else if [Ship Mode] = \"Second Class\" then 2 else if [Ship Mode] = \"Standard Class\" then 3 else if [Ship Mode] = \"Same Day\" then 0 else null),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Conditional Column\",{{\"ModeOrder\", Int64.Type}}),\n    #\"Sorted Rows\" = Table.Sort(#\"Changed Type\",{{\"ModeOrder\", Order.Ascending}})\nin\n    #\"Sorted Rows\";\r\nshared tCustomers = let\n    Source = #\"Base Query\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Customer ID\", \"Customer Name\", \"Segment\", \"Country\", \"City\", \"State\", \"Postal Code\", \"Region\"}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Removed Other Columns\", {\"Country\", \"City\", \"State\", \"Postal Code\", \"Region\"}, #\"tAddresses - MAKE CHANGES HERE\", {\"Country\", \"City\", \"State\", \"Postal Code\", \"Region\"}, \"Addresses\", JoinKind.LeftOuter),\n    #\"Expanded Addresses\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Addresses\", {\"AddressID\"}, {\"AddressID\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Addresses\",{\"Country\", \"City\", \"State\", \"Postal Code\", \"Region\"})\nin\n    #\"Removed Columns\";\r\nshared Customers = let\n    Source = tCustomers,\n    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"AddressID\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns\")\nin\n    #\"Removed Duplicates\";\r\nshared CustomerAddressLINK = let\n    Source = tCustomers,\n    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"Customer Name\", \"Segment\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns\")\nin\n    #\"Removed Duplicates\";\r\nshared Addresses = let\r\n  Source = #\"tAddresses - MAKE CHANGES HERE\"\r\nin\r\n  Source;\r\n","connectionOverrides":[{"path":"https://github.com/RossGeordie/PowerBI_101/raw/refs/heads/main/Sample-Superstore.csv","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"https://github.com/RossGeordie/PowerBI_101/raw/refs/heads/main/Sample-Superstore.csv\"}","audience":null}]},"annotations":[{"name":"pbi:QueryGroups","value":"[]"}],"entities":[{"$type":"LocalEntity","name":"Products","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Products.csv"},"attributes":[{"name":"Product ID","dataType":"string"},{"name":"Category","dataType":"string"},{"name":"Sub-Category","dataType":"string"},{"name":"Product Name","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:15:01.5185967+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/Products.csv?snapshot=2025-04-21T09%3A15%3A01.5073442Z"}]},{"$type":"LocalEntity","name":"Orders","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Orders.csv"},"attributes":[{"name":"Order ID","dataType":"string"},{"name":"Order Date","dataType":"date"},{"name":"OrderSalesAMT","dataType":"double"},{"name":"OrderQuant","dataType":"double"},{"name":"OrderProfit","dataType":"double"},{"name":"Rows","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:15:00.2373394+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/Orders.csv?snapshot=2025-04-21T09%3A15%3A00.2259697Z"}]},{"$type":"LocalEntity","name":"Sales","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Sales.csv"},"attributes":[{"name":"Order ID","dataType":"string"},{"name":"Ship Date","dataType":"date"},{"name":"Ship Mode","dataType":"string"},{"name":"Customer ID","dataType":"string"},{"name":"Product ID","dataType":"string"},{"name":"Sales","dataType":"double"},{"name":"Quantity","dataType":"int64"},{"name":"Discount","dataType":"double"},{"name":"Profit","dataType":"double"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:15:06.7998936+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/Sales.csv?snapshot=2025-04-21T09%3A15%3A06.7811918Z"}]},{"$type":"LocalEntity","name":"Calendar","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Calendar.csv"},"attributes":[{"name":"Date","dataType":"date"},{"name":"Year","dataType":"string"},{"name":"Month","dataType":"int64"},{"name":"Day","dataType":"int64"},{"name":"Month Name","dataType":"string"},{"name":"Day Name","dataType":"string"},{"name":"Formatted Date","dataType":"string"},{"name":"MonthYear","dataType":"string"},{"name":"Month Offset","dataType":"int64"},{"name":"Day Offset","dataType":"int64"},{"name":"YearOffset","dataType":"int64"},{"name":"DoW","dataType":"int64"},{"name":"CorpMonthnum","dataType":"int64"},{"name":"Week Number","dataType":"int64"},{"name":"CorpYear","dataType":"string"},{"name":"Week Offset","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:14:59.5498567+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/Calendar.csv?snapshot=2025-04-21T09%3A14%3A59.5340073Z"}]},{"$type":"LocalEntity","name":"Shipping Mode","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Shipping%20Mode.csv"},"attributes":[{"name":"Ship Mode","dataType":"string"},{"name":"ModeOrder","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:15:00.0810891+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/Shipping%20Mode.csv?snapshot=2025-04-21T09%3A15%3A00.0636821Z"}]},{"$type":"LocalEntity","name":"Customers","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Customers.csv"},"attributes":[{"name":"Customer ID","dataType":"string"},{"name":"Customer Name","dataType":"string"},{"name":"Segment","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:15:00.7529636+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/Customers.csv?snapshot=2025-04-21T09%3A15%3A00.7456878Z"}]},{"$type":"LocalEntity","name":"CustomerAddressLINK","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"CustomerAddressLINK.csv"},"attributes":[{"name":"Customer ID","dataType":"string"},{"name":"AddressID","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:15:00.2685911+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/CustomerAddressLINK.csv?snapshot=2025-04-21T09%3A15%3A00.2488704Z"}]},{"$type":"LocalEntity","name":"Addresses","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Addresses.csv"},"attributes":[{"name":"Country","dataType":"string"},{"name":"City","dataType":"string"},{"name":"State","dataType":"string"},{"name":"Postal Code","dataType":"int64"},{"name":"Region","dataType":"string"},{"name":"AddressID","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2025-04-21T09:15:00.5967304+00:00","location":"https://wabiuksbprcdsap1.blob.core.windows.net:443/ecd66603-d6c7-4d4d-a520-4026e974f006/Addresses.csv?snapshot=2025-04-21T09%3A15%3A00.5784223Z"}]}]}